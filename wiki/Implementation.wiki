#summary How to Implement RawInput project.
#labels Featured

= Introduction =

Right now it's very simple, not much is needed, just:
  * Construct a RawInput::Input<RawInput::Unbuffered> object.
  * Update on user's WndProc function.
  * Query for input.

The source has a demo project, all the info shown here is replicated there.

Please take notice that this info is likely to change at any time.

----
== Construction ==

Main form of usage is to define a static or extern object:
{{{
extern/static Input * input; // Preferably inside some namespace/class, respectibly.
}}}
Then simply:
{{{
input = new Input(<handle to window>);
}}}

----
== Update ==

In the user's WndProc function add:
{{{
case WM_INPUT:
    return input->Update(hWnd, message, wParam, lParam);
}}}

----
== Querying ==

User has the following functions for basic querying:

Keyboard:
{{{
bool RawInput::KeyUp(const unsigned short & button) const;
bool RawInput::KeyDown(const unsigned short & button) const;
bool RawInput::KeyHeld(const unsigned short & button) const;
}}}
*Notes*: see [http://code.google.com/p/rawinput/issues/detail?id=1].

Mouse:
{{{
bool RawInput::MouseEvent(const unsigned short & button) const;
void RawInput::MousePos(long & x, long & y) const;
}}}
*Notes*: RawInput::MousePos(x, y) returns mouse's last position in it's arguments.

Joystick:
{{{
//Not implemented.
}}}
----